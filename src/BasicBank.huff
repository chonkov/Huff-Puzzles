/** 
 *  BASIC_BANK HUFF EXERCISE
 *  
 *  The task is to create a basic bank with huff
 * functionalities include
 *      - depositing tokens via similar to how solidity's `receive` function works
 *      - withdrawing tokens
 *      - keeping track of and viewing balance
 */

#define function balanceOf(address) payable returns(uint256)
#define function withdraw(uint256) payable returns()

#define macro MAIN() = takes(0) returns(0) {
   0x00 0x20 mstore
   caller 0x00 mstore
   0x40 0x00 sha3

   0x00 calldataload 0xe0 shr
   
   dup1
   __FUNC_SIG(balanceOf) eq balanceOf jumpi

   __FUNC_SIG(withdraw) eq withdraw jumpi

   dup1

   sload
   callvalue
   add
   swap1
   sstore

   stop

   balanceOf:
   pop
   sload
   0x00 mstore
   0x20 0x00 return

   withdraw:
   dup1
   sload
   dup1
   0x04 calldataload
   dup1
   swap2
   lt error jumpi
   dup1
   swap3
   swap2
   sub
   swap1
   sstore

   0x00 0x00 0x00 0x00 swap4 caller gas call

   iszero error jumpi
   stop

   error:
   0x00 0x00 revert
}
