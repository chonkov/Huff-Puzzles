
/** 
 *  MULTIPLY HUFF EXERCISE
 *
 *  When writing solidity, we most times have to perform some mathematical operations like multiplication etc
 *  
 *  The task is to write within the `MAIN` macro below, a function named `multiply` that takes in 2 uint256s, and returns their product. Be sure to revert on overflow
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

#define function multiply(uint256, uint256) payable returns(uint256)


#define macro MAIN() = takes(0) returns(0) {
   0x00
   calldataload
   0xe0
   shr

   __FUNC_SIG(multiply)
   eq
   multiplication
   jumpi

   0x00
   0x00
   revert

   multiplication:
   0x04
   calldataload
   dup1
   iszero
   zero_case
   jumpi

   0x24
   calldataload
   dup1
   iszero
   zero_case
   jumpi

   mul

   dup1

   0x04
   calldataload
   swap1

   div

   0x24
   calldataload

   eq

   end
   jumpi

   0x6f766572666c6f77 0x40 mstore
   0x20 0x40 revert

   zero_case:
   0x00
   0x00
   mstore

   0x20
   0x00
   return

   end:

   0x00
   mstore

   0x20
   0x00
   return
}